[
  {
    "objectID": "posts/Week 5 (Midterm tips)/index.html",
    "href": "posts/Week 5 (Midterm tips)/index.html",
    "title": "Week 5 Tip Sheet",
    "section": "",
    "text": "###Equal to\n\n1 == 1 # is 1 equal to 1?\n\n[1] TRUE\n\n1 == 2 # is 1 equal to 2?\n\n[1] FALSE\n\nc(1, 2, 3) == c(2, 1, 3) # compares each element with each element\n\n[1] FALSE FALSE  TRUE\n\n1 == c(2, 1, 3)\n\n[1] FALSE  TRUE FALSE\n\n\n###Not Equal to\n\n1 != 1 # is 1 equal to 1?\n\n[1] FALSE\n\n1 != 2 # is 1 equal to 2?\n\n[1] TRUE\n\nc(1, 2, 3) != c(2, 1, 3) # compares each element with each element\n\n[1]  TRUE  TRUE FALSE\n\n1 != c(2, 1, 3)\n\n[1]  TRUE FALSE  TRUE\n\n\n###Greater than or less than\n\n1 > 1 # is 1 greater than 1?\n\n[1] FALSE\n\n5 > 1 # is 5 greater than 1?\n\n[1] TRUE\n\n3 < 2 # is 3 less than 2?\n\n[1] FALSE\n\n3 < 1 # is 3 less than 1?\n\n[1] FALSE\n\nc(1, 2, 3) > c(2, 1, 3) # ask the question element by element\n\n[1] FALSE  TRUE FALSE\n\nc(1, 2, 3) < c(2, 1, 3)\n\n[1]  TRUE FALSE FALSE\n\n2 > c(1, 2, 3) # is greater than each of the numbers\n\n[1]  TRUE FALSE FALSE\n\n\n\nGreater than or Equal to, Less than or Equal to\n\n1 >= 1 # is 1 greater than 1?\n\n[1] TRUE\n\n5 >= 1 # is 5 greater than 1?\n\n[1] TRUE\n\n3 <= 2 # is 3 less than 2?\n\n[1] FALSE\n\n3 <= 1 # is 3 less than 1?\n\n[1] FALSE\n\nc(1, 2, 3) >= c(2, 1, 3) # ask the question element by element\n\n[1] FALSE  TRUE  TRUE\n\nc(1, 2, 3) <= c(2, 1, 3)\n\n[1]  TRUE FALSE  TRUE\n\n2 >= c(1, 2, 3) # is greater than each of the numbers\n\n[1]  TRUE  TRUE FALSE\n\n\n###And\n\n #is 16 divisible by 4 AND 8\n16 %% 4 == 0 & 16 %% 8 == 0\n\n[1] TRUE\n\n# is 16 divisible by 4 AND 3\n16 %% 4 == 0 & 16 %% 3 == 0\n\n[1] FALSE\n\n# is 16 divisible by 8 and 4 and 2\n16 %% 4 == 0 & 16 %% 8 == 0 & 16 %% 2 == 0\n\n[1] TRUE\n\n\n###OR\n\n# is 16 divisible by 4 OR 8\n16 %% 4 == 0 | 16 %% 8 == 0\n\n[1] TRUE\n\n# is 16 divisible by 4 OR 3\n# it is divisible by 4, so the answer is TRUE\n# because at least one of the comparisons is TRUE\n16 %% 4 == 0 | 16 %% 3 == 0\n\n[1] TRUE\n\n\n\n\nIF ELSE statements\n\na <- 1 # define a to be a 1\nif (a == 1) {\n  print(a) # this is what happens if a==1\n} else {\n  print(\"A is not 1\") # this is what happens if a is not 1\n}\n\n[1] 1\n\n\n\na <- 2 # define a to be a 1\nif (a == 1) {\n  print(a) # this is what happens if a==1\n} else {\n  print(\"A is not 1\") # this is what happens if a is not 1\n}\n\n[1] \"A is not 1\"\n\n\n###IF and Else in a loop\n\na <- c(1, 0, 1, 0, 0, 0, 1) # make a variable contain 1s and 0s\n\n# write a loop to check each element in the variable\n# and do different things depending on the element\n\nfor (i in a) {\n  if (i == 1) {\n    print(\"I'm a 1\") # what to do when i is 1\n  } else {\n    print(\"I'm not a 1\") # what to do when i is not 1\n}}\n\n[1] \"I'm a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm not a 1\"\n[1] \"I'm a 1\"\n\n\n###Breaking a loop\n\nfor(i in 1:10) {\n  if (i < 5) {\n    print(i)\n  } else{\n    break #Use the word break\n  }\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n\n\n\n\nWhile loop\n\ni <- 1 # create an variable\nwhile (i < 6) {\n  print(i)\n  i = i + 1 #add one each step of the loop\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n###Repeat Loop\n\ni <- 0\nrepeat {\n  i <- i + 1\n  print(i)\n  if (i == 5) {\n    break\n  }\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n###Example 1 ###(Using the value of the iterator to assign in values systematically to another variable.)\n\n# put 1 into the first five positions of x\nx <- c() # create empty vector\nfor (i in 1:5) {\n  x[i] <- 1  # assign 1 to the ith slot in x\n}\nx\n\n[1] 1 1 1 1 1\n\n\n###Example 2\n\n# put the numbers 1-5 in the first 5 positions of x\nx <- c()\nfor (i in 1:5) {\n  x[i] <- i\n}\nx\n\n[1] 1 2 3 4 5\n\n\n###Example 3 ###Make your own counter, when you need one\n\na <- c(1, 4, 3, 5, 7, 6, 8, 2)\nodd <- c()\ncounter <- 0\nfor (i in a) {\n  # i will the values of a in each position\n  counter <- counter + 1\n  if (i %% 2 != 0) {\n    odd[counter] <- \"odd\"\n  } else {\n    odd[counter] <- \"even\"\n  }\n}\nodd\n\n[1] \"odd\"  \"even\" \"odd\"  \"odd\"  \"odd\"  \"even\" \"even\" \"even\""
  },
  {
    "objectID": "posts/Week 4 Data Vis/Index.html",
    "href": "posts/Week 4 Data Vis/Index.html",
    "title": "Week 4 Data Vis",
    "section": "",
    "text": "Data types: Show that you understand what is available to you in R. Note also, this goal overlaps with part of the midterm project. See the appendix on Data Types in the textbook for help. Write notes and R code chunks to demonstrate your knowledge\nTidy Data: Show that you understand what this means. Give an example of data this is in tidy format, and data that is not.\nggplot2: We will continue learning about this across the semester. Show at a minimum that you can make a graph and add it to your blog. Try examples from the textbook. Show that you understand the layer concept. Identify aspects that are confusing to you so we can discuss them in class.\nDate: 02/22/23"
  },
  {
    "objectID": "posts/Week 4 Data Vis/Index.html#data.frame",
    "href": "posts/Week 4 Data Vis/Index.html#data.frame",
    "title": "Week 4 Data Vis",
    "section": "Data.frame",
    "text": "Data.frame\n\nmy_df <- data.frame(a=1:5,\n                    b = c (\"one\", \"two\", \"three\", \"four\", \"five\"),\n                    random = runif(5,0,1))\n#print to view\nmy_df\n\n  a     b    random\n1 1   one 0.7288840\n2 2   two 0.7332026\n3 3 three 0.6275594\n4 4  four 0.1476724\n5 5  five 0.6400597\n\n\n\n#Access parts of the table\nmy_df[1,] # row 1, all columns\n\n  a   b   random\n1 1 one 0.728884\n\nmy_df[,1] # column 1, all rows\n\n[1] 1 2 3 4 5\n\nmy_df[1:2,3] # row 1 and 2 and column 3\n\n[1] 0.7288840 0.7332026\n\n\n#ggplot\n\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v2/data/survey_data.csv\")\n\nRows: 707 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): caller_id, employee_id, issue_category\ndbl  (3): wait_time, call_time, satisfaction\ndttm (1): call_start\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(survey_data)\n\n# A tibble: 6 × 7\n  caller_id employee_id call_start          wait_time call_time issue_…¹ satis…²\n  <chr>     <chr>       <dttm>                  <dbl>     <dbl> <chr>      <dbl>\n1 C001      E01         2020-09-22 10:47:54       169        34 tech           3\n2 C002      E01         2020-09-07 22:10:25       206        52 tech           2\n3 C003      E01         2020-07-06 12:08:59       207        41 tech           2\n4 C004      E01         2020-02-20 13:12:03       132        16 tech           4\n5 C005      E01         2020-11-08 17:42:10       178        20 returns        3\n6 C006      E01         2020-06-01 19:06:12       230        46 returns        2\n# … with abbreviated variable names ¹​issue_category, ²​satisfaction\n\nlibrary(tidyverse)\n\n\nggplot()\n\n\n\n#| fig-width 250\n#ggplot(data=survey_data,\n       #mapping = aes(x= wait_time, y=satisfaction))\n#same as above\nggplot(survey_data,aes(x= wait_time, y=satisfaction,)) + geom_point(color=\"black\", size = 5)+ geom_point(color=\"blue\",size= 3) + geom_smooth(method = \"lm\") + geom_smooth()\n\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\nggplot(survey_data,aes(x= wait_time, y=satisfaction, color= satisfaction)) +geom_point()"
  },
  {
    "objectID": "posts/Week 3 Basic Skills/Index.html",
    "href": "posts/Week 3 Basic Skills/Index.html",
    "title": "Week 3 Basic Skills",
    "section": "",
    "text": "Be able to make a new .qmd document\n\n\nCopy a folder, and use a copied .qmd. Provides top lvl yml or use the green plus and press quarto docs but you start off blank. to ass yml\nstart with 3 dashes “---” , add title and author then end with “---\n\n\n\nBe able to render a .qmd document\n\n\nPress render at the top of the screen besides the magnifying glass icon.\n\n\n\nExplain the difference between the source editor view and visual editor view in Rstudio.\n\nDifference between Source and Visual in R\n\nThe source view is plain text, will be displayed exactly as it is with all the characters.\nWith Visual it interpenetrates it as markdown text it shows the formatted markdown text instead of the plain text.Be able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.\n\n\n\nBe able to insert simple markdown plain text (headers, lists, paragraphs), and render the document."
  },
  {
    "objectID": "posts/Week 3 Basic Skills/Index.html#second-level-header",
    "href": "posts/Week 3 Basic Skills/Index.html#second-level-header",
    "title": "Week 3 Basic Skills",
    "section": "Second Level Header",
    "text": "Second Level Header\n\nHere is some plan text\n\n\n\nBe aware of resources to help you learn more about markdown options.\n\n\nItalics BOLD superscript2 and subscript2 ~~StrikeThrough~~\nhttps://noahx35.github.io/Noah-s-Blog/\nNoah’s Blog\n\n\n\n\nCaption\n\n\n\n\nCharacteristics of elephants\n\nThey are large\nHave legs\n\nfour legs\n\n\n\n\n\n\n\n\n\n\n6. Be able to insert an R code chunk, and show the output in the rendered document.\n\n\n::: {.cell}\n\n\n{.r .cell-code} 1+1\n\n\n::: {.cell-output .cell-output-stdout}\n\n\n- macro for quick insert\n\n\n- Three back ticks\n\n\n- ```Shows up in a slightly different font``` produces a gray square\n\n\n- To get a code block use the following to get a code block:\n\n\nCommand + Option + i or ```r```\n\n\n::: {.cell}\n\n\n{.r .cell-code} 1+1\n\n\n::: {.cell-output .cell-output-stdout}\n\n\n{.r .cell-code} \"use /n to start a new line in a string\"\n\n\n::: {.cell-output .cell-output-stdout}\n\n\nprecedence issues (first to last)\n\n\n\n\nRunning R code chunks in a qmd\n\n\npressing play\ncopy/paste into console\nhighlight then command-enter (mac)\nprecedence issues (first to last)\n\n\n\nBe aware of R code chunk options, and how to use eval, messages, error, warning, and echo.\n\n\n#| eval: true\n#| echo: true\n#| error: true\nhist(mtcars$mpg)\n\n\n\n\n\n\nBe able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)\n\nThe value of c is 1\n\n\nWrite inline r code.\n\n\n\nExplain how the rendering environment is different from the Rstudio environment.\n\n\n\nBe aware of more advanced quarto options for html documents, and try some of the options."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/My-new-post/index.html",
    "href": "posts/My-new-post/index.html",
    "title": "My First post",
    "section": "",
    "text": "This is a post with executable code.\nThis is my new post"
  },
  {
    "objectID": "posts/Week 5 /Index.html",
    "href": "posts/Week 5 /Index.html",
    "title": "Week 5 Data Import",
    "section": "",
    "text": "date: “2023-02-28”"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/TIP Sheet Wk 2/index.html",
    "href": "posts/TIP Sheet Wk 2/index.html",
    "title": "Tip Sheet Week 2",
    "section": "",
    "text": "Date: 02/06/23\nHow to commit and push changes to GitHub:\n\nMake changes to file\nRender the website in R Studio\nCommit the changes in GitHub desktop with a commit message\nPush to github.com\n\n(You can use R Studio as well)\nCan enter a package without enabling it by using ::\nbeepr::beep()\nInputs to functions\nbeep (sound = 8, expr = NULL)\nDate: 02/08/23\nUse help to load the help file for functions or ?function_name Ex. ?mean to find mean function\n??function_name look for functions inside of packages you have not loaded Ex. ??Mean\nhelp (“mean”, package=“base”)\nc() funtion in R my\nmean(as.numeric(c(“1”,“2”,“3”))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Noah’s Blog",
    "section": "",
    "text": "Week 7: More gg_plot\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 3, 2024\n\n\nNoah\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 6 Functions\n\n\n\n\n\n\n\n\n\n\n\n\nMar 8, 2023\n\n\nNoah\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 6 Data Summary\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 6, 2023\n\n\nNoah\n\n\n\n\n\n\n  \n\n\n\n\nWeek 5 Tip Sheet\n\n\n\n\n\n\n\n\n\n\n\n\nMar 1, 2023\n\n\nNoah\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 5 Data Import\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 28, 2023\n\n\nNoah\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 4 Data Vis\n\n\n\n\n\n\n\n\n\n\n\n\nJan 4, 2023\n\n\n\n\n\n\n  \n\n\n\n\nWeek 3 Basic Skills\n\n\n\n\n\n\n\n\n\n\n\n\nJan 4, 2023\n\n\nNoah\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip Sheet Week 2\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 3, 2023\n\n\nNoah\n\n\n\n\n\n\n  \n\n\n\n\nMy First post\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 2, 2023\n\n\nNoah\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJan 1, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/Week 6 Data Summary/index.html",
    "href": "posts/Week 6 Data Summary/index.html",
    "title": "Week 6 Data Summary",
    "section": "",
    "text": "tweets <- readRDS(\"ncod_tweets.rds\")\n\n\nlibrary(tidyverse)\n\nhist(tweets$favorite_count)\n\n\n\n\n\nggplot(tweets, aes(x=favorite_count)) + \n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nlibrary(dplyr)\n\nfiltered_data <- tweets%>%\n  filter(favorite_count<25)\nggplot(filtered_data, aes(x=favorite_count)) + \n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\nfavourite_summary <- summarise(tweets,\n                           mean_favs = mean(favorite_count),\n                           median_favs = median(favorite_count),\n                           min_favs = min(favorite_count),\n                           max_favs = max(favorite_count))\n\n###Log Scale\n\nggplot(tweets, aes(x = favorite_count)) +\n  geom_histogram(bins = 25) +\n  scale_x_continuous(trans = \"pseudo_log\", \n                     breaks = c(0, 1, 10, 100, 1000, 10000))\n\n\n\n\n\ntweet_summary <- tweets %>%\n  summarise(mean_favs = mean(favorite_count),\n            median_favs = quantile(favorite_count, .5),\n            n = n(),\n            min_date = min(created_at),\n            max_date = max(created_at))\n\nglimpse(tweet_summary)\n\nRows: 1\nColumns: 5\n$ mean_favs   <dbl> 29.71732\n$ median_favs <dbl> 3\n$ n           <int> 28626\n$ min_date    <dttm> 2021-10-10 00:10:02\n$ max_date    <dttm> 2021-10-12 20:12:27\n\n\n\n#tweets$favorite_count\n\ntweets$source[25]\n\n[1] \"TweetDeck\"\n\ntweets$text[54]\n\n[1] \"#NationalComingOutDay I'm trans gener bet you didn't know that.\\n\\nAnd if that catches you off guard wait until i tell you I'm bi and also aro\"\n\n\n\ntweet_summary <- tweets %>%\n  summarise(mean_favs = mean(favorite_count),\n            median_favs = quantile(favorite_count, .5),\n            n = n(),\n            min_date = min(created_at),\n            max_date = max(created_at))\n\nglimpse(tweet_summary)\n\nRows: 1\nColumns: 5\n$ mean_favs   <dbl> 29.71732\n$ median_favs <dbl> 3\n$ n           <int> 28626\n$ min_date    <dttm> 2021-10-10 00:10:02\n$ max_date    <dttm> 2021-10-12 20:12:27\n\n\n###Inline coding\n\ndate_from <- tweet_summary$min_date %>% \n  format(\"%d %B, %Y\")\ndate_to <- tweet_summary$max_date %>% \n  format(\"%d %B, %Y\")\n\nThere were 28626 tweets between 10 October, 2021 and 12 October, 2021.\n\ntweets_per_user <- tweets %>%\n  count(screen_name, sort = TRUE)\n\n(tweets_per_user)\n\n# A tibble: 25,189 × 2\n   screen_name         n\n   <chr>           <int>\n 1 interest_outfit    35\n 2 LeoShir2           33\n 3 NRArchway          32\n 4 dr_stack           32\n 5 bhavna_95          25\n 6 WipeHomophobia     23\n 7 IAmRocWitChevy1    22\n 8 Tees4LGBT          21\n 9 KatieZakrzewsk1    20\n10 Heyyitsju5tin      19\n# … with 25,179 more rows\n\n\n\ntweets_grouped <- tweets %>%\n  group_by(verified)\n\nverified <- tweets_grouped %>%\n  summarise(count = n(),\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %>%\n  ungroup()\n\nverified\n\n# A tibble: 2 × 4\n  verified count mean_favs mean_retweets\n  <lgl>    <int>     <dbl>         <dbl>\n1 FALSE    26676      18.4          1.83\n2 TRUE      1950     184.          21.5"
  },
  {
    "objectID": "posts/Week 5 /Index.html#date-2023-01-06",
    "href": "posts/Week 5 /Index.html#date-2023-01-06",
    "title": "Week 5 Data Import",
    "section": "date: “2023-01-06”",
    "text": "date: “2023-01-06”"
  },
  {
    "objectID": "posts/Week 7/index.html",
    "href": "posts/Week 7/index.html",
    "title": "Week 7: More gg_plot",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\ngrades <- c(2.5,8,4)\nstudents <- c(\"A\",\"B\",\"C\")\n\nstudent_grades <- tibble(students, grades)\n\n#Alternate syntax\nstudent_grades<-tibble(\n  grades =  c(2.5,8,4),\n  students <- c(\"A\",\"B\",\"C\")\n)\n\nggplot(student_grades, aes(x=students, y=grades))+\n  geom_bar(stat=\"identity\",fill=\"white\",color= \"blue\") + \n  scale_y_continuous(breaks = 0:10, limits= c(0,10)) +\n  xlab(\"Students\")+\n  ylab(\"Grades\")+\n  ggtitle(\"                                                  Grades of Students\")+\n  geom_text(aes(label=grades),color=\"blue\", position = position_dodge(width=1),vjust=-1) +\n  theme_classic()+\n  theme(title = element_text(color = \"blue\"))+\n  theme(axis.line.x.bottom =element_line(color=\"blue\"))+\n  theme(axis.line.y.left = element_line(color=\"blue\"))+\n  theme(axis.text.x.bottom = element_text(color=\"blue\"))+\n  theme(axis.text.y.left = element_text(color=\"blue\"))+\n  theme(axis.title.y.left = element_text(color = \"blue\"))+\n  theme(axis.title.x.bottom = element_text(color =\"blue\"))\n\n\n\n\n#Week 7 Day 2 ###FizzBuzz\n\nfor (i in 1:100){\n  if(i %% 3 == 0 & i %% 5 == 0) {\n    print(\"FizzBuzz\")\n    } \n  else if (i %% 3==0) {\n    print(\"Fizz\")\n    } \n  else if (i %% 5==0) {\n    print(\"Buzz\")\n    } \n  else{\n    print(i)\n}}\n\n[1] 1\n[1] 2\n[1] \"Fizz\"\n[1] 4\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 7\n[1] 8\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 11\n[1] \"Fizz\"\n[1] 13\n[1] 14\n[1] \"FizzBuzz\"\n[1] 16\n[1] 17\n[1] \"Fizz\"\n[1] 19\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 22\n[1] 23\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 26\n[1] \"Fizz\"\n[1] 28\n[1] 29\n[1] \"FizzBuzz\"\n[1] 31\n[1] 32\n[1] \"Fizz\"\n[1] 34\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 37\n[1] 38\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 41\n[1] \"Fizz\"\n[1] 43\n[1] 44\n[1] \"FizzBuzz\"\n[1] 46\n[1] 47\n[1] \"Fizz\"\n[1] 49\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 52\n[1] 53\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 56\n[1] \"Fizz\"\n[1] 58\n[1] 59\n[1] \"FizzBuzz\"\n[1] 61\n[1] 62\n[1] \"Fizz\"\n[1] 64\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 67\n[1] 68\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 71\n[1] \"Fizz\"\n[1] 73\n[1] 74\n[1] \"FizzBuzz\"\n[1] 76\n[1] 77\n[1] \"Fizz\"\n[1] 79\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 82\n[1] 83\n[1] \"Fizz\"\n[1] \"Buzz\"\n[1] 86\n[1] \"Fizz\"\n[1] 88\n[1] 89\n[1] \"FizzBuzz\"\n[1] 91\n[1] 92\n[1] \"Fizz\"\n[1] 94\n[1] \"Buzz\"\n[1] \"Fizz\"\n[1] 97\n[1] 98\n[1] \"Fizz\"\n[1] \"Buzz\"\n\n\n\nsum(1:100)\n\n[1] 5050\n\n\n\na <- 0\nfor (i in 1:100){\n  a <- a+i\n}\na\n\n[1] 5050\n\n\n###Sum between 2 numbers\n\nsum(50:100)\n\n[1] 3825\n\n\n\na <- 0\nfor (i in 50:100){\n  a <- a+i\n}\na\n\n[1] 3825\n\n\n\nSum_sequence <- function(min,max){\n  return(sum(min:max))\n}\nSum_sequence(min=50,max=100)\n\n[1] 3825\n\n\n\nSum_sequence_loop <- function(min,max){\n  a<-0\n  for (i in min:max){\n    a<-a+i\n  }\n  return(a)\n}\n Sum_sequence_loop(50,100)\n\n[1] 3825\n\n\n#Generate 100 random numbers\n\nrandom_numbers<-runif(n=1000, min=0,max=1000)\nhist(random_numbers)\n\n\n\n\n\n#normal_numbers<-rnorm(n=1000,min=0,max=1000)\n\n\nsample(1:6,1)\n\n[1] 4"
  },
  {
    "objectID": "posts/Week 6 Functions/index.html",
    "href": "posts/Week 6 Functions/index.html",
    "title": "Week 6 Functions",
    "section": "",
    "text": "x<-1:5\nfor (i in x) {\n  print(i)}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n\n\n\nx<-1:5\nfor (matt in x) {\n  print(i)}\n\n[1] 5\n[1] 5\n[1] 5\n[1] 5\n[1] 5\n\n\n###The rm() function is used to remove a defined variable in the enviorment\n#Functions\n\nfunction_name<- function(input1,input2){\n  #code here \n  retrun(something)\n}\n\n\nprint_hello_world<-function(){\n  return(print(\"Hello World\"))\n}\nprint_hello_world()\n\n[1] \"Hello World\"\n\n\n\nreturn_input <- function(input){\n  return(input)\n}\n\n return_input(input = 5)\n\n[1] 5\n\n return_input(5)\n\n[1] 5\n\n\n\nadd_one <- function(my_number){\n  temp <- my_number + 1\n    return(temp)\n}\n\nadd_one(10)\n\n[1] 11\n\n\n\nadd_three <- function(value1,value2,value3){\n  sum <- value1+value2+value3\n  return(sum)\n}\nadd_three(1,5,11)\n\n[1] 17\n\n\n\nc(\"my\",\"name\",\"is\")\n\n[1] \"my\"   \"name\" \"is\"  \n\npaste(\"my\",\"name\",\"is\")\n\n[1] \"my name is\"\n\n\n\npaste(c(\"my\",\"name\",\"is\"),collapse =\" \")\n\n[1] \"my name is\"\n\n\n\n1+5/2\n\n[1] 3.5\n\n(1+5)/2\n\n[1] 3\n\n\n\n# solution 1\nsolution <-1:100\n\n# solution 2\na<-c()\nfor (i in 1:100) {\na[i] <- i \n}\na\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\n#solution 3\ni <- 0\na<-c()\nwhile(i<=100){\n  i<- i+1\n  a[i]<i\n}\na\n\nNULL"
  }
]