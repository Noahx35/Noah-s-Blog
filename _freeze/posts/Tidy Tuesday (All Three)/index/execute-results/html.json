{
  "hash": "77059f4b95aa5f7067c193d6dc9fb893",
  "result": {
    "markdown": "---\ntitle: \"Tidy Tuesday ( Final )\"\nauthor: \"Noah\"\ndate: \"2023-01-15\"\nimage: \"image.jpg\"\n\n---\n\n---\ntitle: \"Tidy Tuesday (All Three)\"\nauthor: \"Noah\"\ndate: \"2023-01-20\"\nimage: \"image.jpg\"\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n:::\n\n\n### First Tidy Tuesday \n\n::: {.cell}\n\n```{.r .cell-code}\n# Here is the link to the replicated image\n\"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-04-11/pic2.png\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-04-11/pic2.png\"\n```\n:::\n\n```{.r .cell-code}\n# Read in with tidytuesdayR package \n# Install from CRAN via: install.packages(\"tidytuesdayR\")\n# This loads the readme and all the datasets for the week of interest\n\n# Either ISO-8601 date or year/week works!\n\neggdata <- tidytuesdayR::tt_load('2023-04-11')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2023-04-11 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There are 2 files available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 2: `egg-production.csv`\n\tDownloading file 2 of 2: `cage-free-percentages.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\neggdata <- tidytuesdayR::tt_load(2023, week = 15)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2023-04-11 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There are 2 files available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 2: `egg-production.csv`\n\tDownloading file 2 of 2: `cage-free-percentages.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nByyear<-separate(eggdata$`cage-free-percentages`,observed_month, sep = \"-\", into = c(\"year\", \"Month-Day\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 2 pieces. Additional pieces discarded in 96 rows [1, 2, 3, 4, 5, 6, 7,\n8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n```\n:::\n\n```{.r .cell-code}\ngp_by_year <- Byyear %>% \n  group_by(year)\n#Egg Year + Month col.\nEgg_Y_M<-unite(gp_by_year, year, `Month-Day`, col = \"year_m\", sep = \"-\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nM_ave <- Egg_Y_M %>% \ngroup_by(year_m) %>%\n  summarize(Mean_hens= mean(percent_hens))\n\nday<- rep(1,65)\n\nYMD_ave_sep <- data.frame(M_ave,day)\n\nYMD_ave<- data.frame(unite(YMD_ave_sep, year_m,day, col = \"YMD\", sep = \"-\"))\nDATEYMD <- data.frame(YMD = as.Date(YMD_ave$YMD,\n                               format = \"%Y-%m-%d\"),Mean_hens=YMD_ave$Mean_hens)\nDATE1<-data.frame(as.Date(DATEYMD$YMD))\nas.Date(DATEYMD$YMD)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"2007-12-01\" \"2008-12-01\" \"2009-12-01\" \"2010-12-01\" \"2011-12-01\"\n [6] \"2012-12-01\" \"2013-12-01\" \"2014-12-01\" \"2015-12-01\" \"2016-04-01\"\n[11] \"2016-08-01\" \"2016-09-01\" \"2016-10-01\" \"2016-11-01\" \"2016-12-01\"\n[16] \"2017-01-01\" \"2017-02-01\" \"2017-03-01\" \"2017-04-01\" \"2017-05-01\"\n[21] \"2017-06-01\" \"2017-07-01\" \"2017-08-01\" \"2017-09-01\" \"2017-10-01\"\n[26] \"2017-11-01\" \"2017-12-01\" \"2018-01-01\" \"2018-02-01\" \"2018-03-01\"\n[31] \"2018-04-01\" \"2018-05-01\" \"2018-06-01\" \"2018-07-01\" \"2018-08-01\"\n[36] \"2018-09-01\" \"2018-10-01\" \"2018-11-01\" \"2018-12-01\" \"2019-01-01\"\n[41] \"2019-02-01\" \"2019-03-01\" \"2019-04-01\" \"2019-05-01\" \"2019-06-01\"\n[46] \"2019-07-01\" \"2019-08-01\" \"2019-09-01\" \"2019-10-01\" \"2019-11-01\"\n[51] \"2019-12-01\" \"2020-01-01\" \"2020-02-01\" \"2020-03-01\" \"2020-04-01\"\n[56] \"2020-05-01\" \"2020-06-01\" \"2020-07-01\" \"2020-08-01\" \"2020-09-01\"\n[61] \"2020-10-01\" \"2020-11-01\" \"2020-12-01\" \"2021-01-01\" \"2021-02-01\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = DATEYMD,aes(YMD, Mean_hens))+ \n  geom_line()+  \n  scale_y_continuous(breaks=seq(0,30,5), labels = label_number(suffix = \"%\"))+\n  scale_x_date(breaks= \"1 year\", date_labels =\"20%y\")+\n  xlab(substitute(paste(bold('Date (year)'))))+\n  ylab(substitute(paste(bold(\"Percentage of US hens in cage-free housing\"))))+\n  labs(caption =\"\nFigure 2 Percentage of hens in cage-free housing from December 2007 to February 2021 [8]. Data are available at \nhttps://osf.io/z2gxn/\") +\n  theme(plot.caption.position = \"bottom right\",\n       plot.caption = element_text(hjust =0 ))+\n  geom_point(size=.5)+\n  theme(axis.text.x = element_text(angle = 0, vjust = 1, hjust=1))+\n  theme_minimal()+\n  theme(\n    panel.grid.major=element_line(colour=\"black\",linewidth = .05),\n    panel.grid.minor=element_line(colour=\"grey\", linewidth = 0.5,))+\n    theme(plot.margin = margin(.6,.1,.6,.17, \"in\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Second Tidy Tuesday \n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the Data\n\n# Read in with tidytuesdayR package \n# Install from CRAN via: install.packages(\"tidytuesdayR\")\n# This loads the readme and all the datasets for the week of interest\n\n# Either ISO-8601 date or year/week works!\n\nsoccerdata<- tidytuesdayR::tt_load('2023-04-04')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2023-04-04 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There is 1 file available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 1: `soccer21-22.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\nsoccerdata <- tidytuesdayR::tt_load(2023, week = 14)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2023-04-04 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There is 1 file available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 1: `soccer21-22.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\nsoccer <- soccerdata$soccer\n\n# Or read in the data manually\n\nsoccer <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-04/soccer21-22.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 380 Columns: 22\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): Date, HomeTeam, AwayTeam, FTR, HTR, Referee\ndbl (16): FTHG, FTAG, HTHG, HTAG, HS, AS, HST, AST, HF, AF, HC, AC, HY, AY, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noverall_goals<- data.frame(soccer$HomeTeam, soccer$AwayTeam,soccer$FTHG,soccer$FTAG)  \naway_goals<- data.frame(overall_goals[,c(2,4)])\nhome_goals<- data.frame(overall_goals[,c(1,3)])\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nAwayteam_goals <- away_goals %>% \n  group_by(soccer.AwayTeam) %>%\n  summarise(total_away_goals = sum(soccer.FTAG))\n\nHometeam_goals <- home_goals %>% \n  group_by(soccer.HomeTeam) %>%\n  summarise(total_Home_goals = sum(soccer.FTHG))\n\nHome_Away_Goals<- data.frame(Awayteam_goals,Hometeam_goals)\n#reviews_by_year <- review_data %>% \n  #group_by(year) %>%\n  #summarize(counts = n())\n\nHome_Away_Goals2 <- Home_Away_Goals[,-3]\n\nsoccer_data2 <- data.frame(Home_Away_Goals2[,1],(Total_Goals=(Home_Away_Goals2[,2]+Home_Away_Goals2[,3])))\n\nnames(soccer_data2)[1] =\"team\"\nnames(soccer_data2)[2] =\"goals\"\n\nfinal_soccer_data <- soccer_data2[order(-soccer_data2$goals),] \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(final_soccer_data, aes(reorder(team,goals),goals))+\n  theme_minimal()+\n  geom_col(fill=\"#7a66ee\", colour = \"#7a66ee\")+\n  xlab(\"Team\")+\n  ylab(\"Goals\")+\n  ggtitle(label = \"Goals scored by team during the 2021-22 EPL season\")+\n  theme(plot.margin = margin(.05,2.5,.05,.05, \"in\"))+\n  theme(plot.title = element_text(size = 12, face = \"bold\"))+\n  theme(\n    panel.grid.major=element_line(colour=\"white\",linewidth = .05),\n    panel.grid.minor=element_line(colour=\"grey\", linewidth = 0.5,))+\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n### Third Tidy Tuesday\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get the Data\n\n# Read in with tidytuesdayR package \n# Install from CRAN via: install.packages(\"tidytuesdayR\")\n# This loads the readme and all the datasets for the week of interest\n\n# Either ISO-8601 date or year/week works!\n\nartdata <- tidytuesdayR::tt_load('2023-01-17')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2023-01-17 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There is 1 file available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 1: `artists.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\nartdata <- tidytuesdayR::tt_load(2023, week = 03)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2023-01-17 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There is 1 file available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 1: `artists.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\narthistory <- artdata$arthistory\n\n# Or read in the data manually\n\nartists <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-17/artists.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3162 Columns: 14\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): artist_name, artist_nationality, artist_nationality_other, artist_g...\ndbl (6): edition_number, year, space_ratio_per_page_total, artist_unique_id,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyears <- data.frame(artists$year)\n\npub_per_year <- years %>% \n  group_by(artists.year) %>%\n  summarize(counts = n())\n\nnames(pub_per_year)[1] =\"year\"\n#pub_per_year[5,]<-(pub_per_year[5,]+pub_per_year[6,])/2 # mean and then remove row 6\n#pub_per_year[5,]<-(pub_per_year[5,]+pub_per_year[6,])/2\n\n\npub_per_year2 <- data.frame(pub_per_year[-c(5,6,9,11,12,13,15,17,19),])\npub_per_year2[nrow(pub_per_year2)+1,]<-c(1988,109)\npub_per_year2[nrow(pub_per_year2)+1,]<-c(2001,170)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(pub_per_year2, aes(year,counts))+\n  geom_bar(stat= \"identity\",fill=\"darkgreen\",color=\"darkgreen\", width = 2.6)+\n  theme_minimal()+\n  theme(panel.grid.major=element_line(colour=\"black\",linewidth = .05),\n    panel.grid.minor=element_line(colour=\"grey\", linewidth = 0.5,))+\n    theme(plot.margin = margin(.8,.2,.8,.2, \"in\"))+\n  ggtitle(label = \"Overall Count of Artists in Gardner's Art Through the Ages\")+\n  geom_text(aes(label=counts), position=position_dodge(width=0.9), vjust=-.2,size=3)+\n    theme(plot.title = element_text(size = 16, face = \"bold\"))+\n   xlab(substitute(paste(bold('Year of Publication'))))+\n  ylab(substitute(paste(bold(\"Count\"))))+\n  scale_y_continuous(breaks=seq(0,200,50))+\n  scale_x_continuous(breaks=seq(1925,2025,25))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}