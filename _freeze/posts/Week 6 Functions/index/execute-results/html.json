{
  "hash": "bae3a977319bf6d66c4c45d0aa1dd717",
  "result": {
    "markdown": "---\ntitle: \"Week 6 Functions\"\nauthor: \"Noah\"\ndate: \"2023-03-08\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nx<-1:5\nfor (i in x) {\n  print(i)}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx<-1:5\nfor (matt in x) {\n  print(i)}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n[1] 5\n[1] 5\n[1] 5\n[1] 5\n```\n:::\n:::\n\n\n###The rm() function is used to remove a defined variable in the enviorment\n\n#Functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunction_name<- function(input1,input2){\n  #code here \n  retrun(something)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint_hello_world<-function(){\n  return(print(\"Hello World\"))\n}\nprint_hello_world()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Hello World\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreturn_input <- function(input){\n  return(input)\n}\n\n return_input(input = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n return_input(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadd_one <- function(my_number){\n  temp <- my_number + 1\n    return(temp)\n}\n\nadd_one(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadd_three <- function(value1,value2,value3){\n  sum <- value1+value2+value3\n  return(sum)\n}\nadd_three(1,5,11)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\"my\",\"name\",\"is\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"my\"   \"name\" \"is\"  \n```\n:::\n\n```{.r .cell-code}\npaste(\"my\",\"name\",\"is\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"my name is\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npaste(c(\"my\",\"name\",\"is\"),collapse =\" \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"my name is\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n1+5/2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.5\n```\n:::\n\n```{.r .cell-code}\n(1+5)/2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# solution 1\nsolution <-1:100\n\n# solution 2\na<-c()\nfor (i in 1:100) {\na[i] <- i \n}\na\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n```\n:::\n\n```{.r .cell-code}\n#solution 3\ni <- 0\na<-c()\nwhile(i<=100){\n  i<- i+1\n  a[i]<i\n}\na\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}