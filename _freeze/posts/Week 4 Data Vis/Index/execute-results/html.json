{
  "hash": "9ceb471f4bee22736271d6866bc6bd5b",
  "result": {
    "markdown": "---\ntitle: \"Week 4 Data Vis\"\n---\n\n\n### \n\n1.  Data types: Show that you understand what is available to you in R. Note also, this goal overlaps with part of the midterm project. See the appendix on Data Types in the textbook for help. Write notes and R code chunks to demonstrate your knowledge\n\n2.  Tidy Data: Show that you understand what this means. Give an example of data this is in tidy format, and data that is not.\n\n3.  ggplot2: We will continue learning about this across the semester. Show at a minimum that you can make a graph and add it to your blog. Try examples from the textbook. Show that you understand the layer concept. Identify aspects that are confusing to you so we can discuss them in class.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#run in console\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nstarwars_copy <- starwars\n\n# class function gives you the data type\n# Check out some of the data types\nhead(starwars_copy) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Luke Skywal…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n2 C-3PO           167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n3 R2-D2            96    32 <NA>    white,… red        33   none  mascu… Naboo  \n4 Darth Vader     202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n5 Leia Organa     150    49 brown   light   brown      19   fema… femin… Aldera…\n6 Owen Lars       178   120 brown,… light   blue       52   male  mascu… Tatooi…\n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n\n```{.r .cell-code}\nclass(starwars_copy$name)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\nclass(starwars_copy$height)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"integer\"\n```\n:::\n\n```{.r .cell-code}\n#plot some of the variables\nggplot(data = starwars_copy,\n  mapping = aes (x= height, y = mass) )+ \n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 28 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](Index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(10.02454353424)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"double\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(10L)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"integer\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"double\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Nominal\ntypeof(\"1\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n:::\n\n\nDate: 02/22/23\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assign 1 to object named a\na <- 1\n2 -> b\n#Will change the interger into a character\nas.character(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1\"\n```\n:::\n:::\n\n\n### VECTOR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nONE_THING <- 1\nTWO_THINGS <- 1:2\n```\n:::\n\n\n## Data.frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_df <- data.frame(a=1:5,\n                    b = c (\"one\", \"two\", \"three\", \"four\", \"five\"),\n                    random = runif(5,0,1))\n#print to view\nmy_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  a     b    random\n1 1   one 0.6223165\n2 2   two 0.4008780\n3 3 three 0.2232768\n4 4  four 0.1691337\n5 5  five 0.6274740\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Access parts of the table\nmy_df[1,] # row 1, all columns\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  a   b    random\n1 1 one 0.6223165\n```\n:::\n\n```{.r .cell-code}\nmy_df[,1] # column 1, all rows\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 4 5\n```\n:::\n\n```{.r .cell-code}\nmy_df[1:2,3] # row 1 and 2 and column 3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6223165 0.4008780\n```\n:::\n:::\n\n\n#ggplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v2/data/survey_data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 707 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): caller_id, employee_id, issue_category\ndbl  (3): wait_time, call_time, satisfaction\ndttm (1): call_start\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(survey_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  caller_id employee_id call_start          wait_time call_time issue_…¹ satis…²\n  <chr>     <chr>       <dttm>                  <dbl>     <dbl> <chr>      <dbl>\n1 C001      E01         2020-09-22 10:47:54       169        34 tech           3\n2 C002      E01         2020-09-07 22:10:25       206        52 tech           2\n3 C003      E01         2020-07-06 12:08:59       207        41 tech           2\n4 C004      E01         2020-02-20 13:12:03       132        16 tech           4\n5 C005      E01         2020-11-08 17:42:10       178        20 returns        3\n6 C006      E01         2020-06-01 19:06:12       230        46 returns        2\n# … with abbreviated variable names ¹​issue_category, ²​satisfaction\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n\nggplot()\n```\n\n::: {.cell-output-display}\n![](Index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#| fig-width 250\n#ggplot(data=survey_data,\n       #mapping = aes(x= wait_time, y=satisfaction))\n#same as above\nggplot(survey_data,aes(x= wait_time, y=satisfaction,)) + geom_point(color=\"black\", size = 5)+ geom_point(color=\"blue\",size= 3) + geom_smooth(method = \"lm\") + geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Index_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(survey_data,aes(x= wait_time, y=satisfaction, color= satisfaction)) +geom_point()\n```\n\n::: {.cell-output-display}\n![](Index_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n:::\n\n\n```{}\n```\n",
    "supporting": [
      "Index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}