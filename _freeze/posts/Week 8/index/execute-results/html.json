{
  "hash": "aa89b482778204ba56fc79f856ca960a",
  "result": {
    "markdown": "---\ntitle: \"Week 8\"\nauthor: \"Noah\"\ndate: \"2023-20-03\"\n---\n\n\n# Mutating Joins\n## What does dplr mutate do?\n### It is a function that allows you to change something, adding new things, or change properties of existing things\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncustomers <- tibble(\n  id = 1:5,\n  city = c(\"Port Ellen\", \"Dufftown\", NA, \"Aberlour\", \"Tobermory\"),\n  postcode = c(\"PA42 7DU\", \"AB55 4DH\", NA, \"AB38 7RY\", \"PA75 6NR\")\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\norders <- tibble(\n  id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),\n  items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\norders_B <- tibble(\n  id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),\n  items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)\n)\n# How to add a new column\norders_B <- orders_B %>%\n  mutate(satisfaction =NA,\n           numbers=1:9)\n\norders_B\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 4\n     id items satisfaction numbers\n  <dbl> <dbl> <lgl>          <int>\n1     2    10 NA                 1\n2     3    18 NA                 2\n3     4    21 NA                 3\n4     4    23 NA                 4\n5     5     9 NA                 5\n6     5    11 NA                 6\n7     6    11 NA                 7\n8     6    12 NA                 8\n9     7     3 NA                 9\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\norders_B <- orders_B %>%\n  mutate(numbers_as_strings= as.character(numbers))\norders_B\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 5\n     id items satisfaction numbers numbers_as_strings\n  <dbl> <dbl> <lgl>          <int> <chr>             \n1     2    10 NA                 1 1                 \n2     3    18 NA                 2 2                 \n3     4    21 NA                 3 3                 \n4     4    23 NA                 4 4                 \n5     5     9 NA                 5 5                 \n6     5    11 NA                 6 6                 \n7     6    11 NA                 7 7                 \n8     6    12 NA                 8 8                 \n9     7     3 NA                 9 9                 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\norders_B %>%\n  mutate(items_minus_id= items- id)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 6\n     id items satisfaction numbers numbers_as_strings items_minus_id\n  <dbl> <dbl> <lgl>          <int> <chr>                       <dbl>\n1     2    10 NA                 1 1                               8\n2     3    18 NA                 2 2                              15\n3     4    21 NA                 3 3                              17\n4     4    23 NA                 4 4                              19\n5     5     9 NA                 5 5                               4\n6     5    11 NA                 6 6                               6\n7     6    11 NA                 7 7                               5\n8     6    12 NA                 8 8                               6\n9     7     3 NA                 9 9                              -4\n```\n:::\n:::\n\n### Left_join (x,y)\nKeeps all the data from the left table and adds anything that matches from the second table.\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_data <- left_join(customers, orders, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in left_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\nleft_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 4\n     id city       postcode items\n  <dbl> <chr>      <chr>    <dbl>\n1     1 Port Ellen PA42 7DU    NA\n2     2 Dufftown   AB55 4DH    10\n3     3 <NA>       <NA>        18\n4     4 Aberlour   AB38 7RY    21\n5     4 Aberlour   AB38 7RY    23\n6     5 Tobermory  PA75 6NR     9\n7     5 Tobermory  PA75 6NR    11\n```\n:::\n:::\n\n### Left Join (y,x)\n\n::: {.cell}\n\n```{.r .cell-code}\nleft2_data <- left_join(orders, customers, by = \"id\")\nleft2_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 4\n     id items city      postcode\n  <dbl> <dbl> <chr>     <chr>   \n1     2    10 Dufftown  AB55 4DH\n2     3    18 <NA>      <NA>    \n3     4    21 Aberlour  AB38 7RY\n4     4    23 Aberlour  AB38 7RY\n5     5     9 Tobermory PA75 6NR\n6     5    11 Tobermory PA75 6NR\n7     6    11 <NA>      <NA>    \n8     6    12 <NA>      <NA>    \n9     7     3 <NA>      <NA>    \n```\n:::\n:::\n\n### Right Join (x,y)\n\n::: {.cell}\n\n```{.r .cell-code}\nright_data <- right_join(customers, orders, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in right_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\nright_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 4\n     id city      postcode items\n  <dbl> <chr>     <chr>    <dbl>\n1     2 Dufftown  AB55 4DH    10\n2     3 <NA>      <NA>        18\n3     4 Aberlour  AB38 7RY    21\n4     4 Aberlour  AB38 7RY    23\n5     5 Tobermory PA75 6NR     9\n6     5 Tobermory PA75 6NR    11\n7     6 <NA>      <NA>        11\n8     6 <NA>      <NA>        12\n9     7 <NA>      <NA>         3\n```\n:::\n:::\n\n### Inner Join \n\n::: {.cell}\n\n```{.r .cell-code}\ninner_data <- inner_join(customers, orders, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in inner_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\ninner_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n     id city      postcode items\n  <dbl> <chr>     <chr>    <dbl>\n1     2 Dufftown  AB55 4DH    10\n2     3 <NA>      <NA>        18\n3     4 Aberlour  AB38 7RY    21\n4     4 Aberlour  AB38 7RY    23\n5     5 Tobermory PA75 6NR     9\n6     5 Tobermory PA75 6NR    11\n```\n:::\n:::\n\n###Full_join()\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_data <- full_join(customers, orders, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in full_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\nfull_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 4\n      id city       postcode items\n   <dbl> <chr>      <chr>    <dbl>\n 1     1 Port Ellen PA42 7DU    NA\n 2     2 Dufftown   AB55 4DH    10\n 3     3 <NA>       <NA>        18\n 4     4 Aberlour   AB38 7RY    21\n 5     4 Aberlour   AB38 7RY    23\n 6     5 Tobermory  PA75 6NR     9\n 7     5 Tobermory  PA75 6NR    11\n 8     6 <NA>       <NA>        11\n 9     6 <NA>       <NA>        12\n10     7 <NA>       <NA>         3\n```\n:::\n:::\n\n### Filtering Joins\n# Being able to filter the rows you want from your data.\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_data <- full_join(customers, orders, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in full_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\nfull_data %>%\n  filter(items > 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n     id city      postcode items\n  <dbl> <chr>     <chr>    <dbl>\n1     3 <NA>      <NA>        18\n2     4 Aberlour  AB38 7RY    21\n3     4 Aberlour  AB38 7RY    23\n4     5 Tobermory PA75 6NR    11\n5     6 <NA>      <NA>        11\n6     6 <NA>      <NA>        12\n```\n:::\n\n```{.r .cell-code}\nfull_data %>%\n  filter(items>21,postcode == \"AB38 7RY\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n     id city     postcode items\n  <dbl> <chr>    <chr>    <dbl>\n1     4 Aberlour AB38 7RY    23\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_data%>%\n  filter(is.na(city)==FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n     id city       postcode items\n  <dbl> <chr>      <chr>    <dbl>\n1     1 Port Ellen PA42 7DU    NA\n2     2 Dufftown   AB55 4DH    10\n3     4 Aberlour   AB38 7RY    21\n4     4 Aberlour   AB38 7RY    23\n5     5 Tobermory  PA75 6NR     9\n6     5 Tobermory  PA75 6NR    11\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}